!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("presentation-decorator"),require("load-google-maps-api")):"function"==typeof define&&define.amd?define("presentation-maps",["presentation-decorator","load-google-maps-api"],t):"object"==typeof exports?exports["presentation-maps"]=t(require("presentation-decorator"),require("load-google-maps-api")):e["presentation-maps"]=t(e["presentation-decorator"],e["load-google-maps-api"])}(this,function(e,t){return function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="/dist/",o(o.s=0)}([function(e,t,o){"use strict";var r,n=o(1),a=(r=n)&&r.__esModule?r:{default:r};e.exports.HeatMapView=a.default},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(2),n=i(o(3)),a=i(o(4));function i(e){return e&&e.__esModule?e:{default:e}}const s="map";t.default=class extends r.DirectiveView{constructor(e){e||(e={}),super(e),this.template||(this.template=""),e.data?this._data=e.data:this._data=[],e.apikey?this._apikey=e.apikey:this._apikey="",e.lat?this._lat=e.lat:this._lat=37.775,e.long?this._long=e.long:this._long=-122.434,e.zoom?this._zoom=e.zoom:this._zoom=13,this._map_el=`${this.name}_${s}`,this.template+=`\n      <div id="${this._map_el}" class="map"></div>\n    `}async render(){return await super.render(),await(0,n.default)({key:this._apikey,libraries:["visualization"]}).then(e=>{const t=document.getElementById(this._map_el);if(!t)throw new Error("no map el");return this.map=new e.Map(t,{zoom:this._zoom,center:{lat:this._lat,lng:this._long},mapTypeId:"satellite"}),e.visualization?this.heatmap=new e.visualization.HeatmapLayer({data:(0,a.default)(e,this._data),map:this.map}):console.warn("Google Visualization could not load!"),!0}).catch(e=>{console.error(e)}),this}async remove(){return super.remove()}}},function(t,o){t.exports=e},function(e,o){e.exports=t},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=(e,t)=>{const o=[];if(t&&Array.isArray(t)&&t.length>0){let r=0;const n=t.length;for(;r<n;r++)o.push(new e.LatLng(t[r].lat,t[r].long))}return o}}])});
//# sourceMappingURL=presentation-maps.js.map